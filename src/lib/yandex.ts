// if (!process.env.YANDEX_API_KEY || !process.env.YANDEX_FOLDER_ID) {
//   throw new Error('YandexGPT API key or Folder ID are not configured in .env.local');
// }
//
// const yandexApiKey = process.env.YANDEX_API_KEY;
// const yandexFolderId = process.env.YANDEX_FOLDER_ID;
// const yandexApiUrl = 'https://llm.api.cloud.yandex.net/foundationModels/v1/completion';
//
// export interface AiAnalysisResult {
//   rewrittenText: string;
//   imagePrompt: string;
// }
//
// export async function getAiAnalysis(originalText: string): Promise<AiAnalysisResult> {
//   console.log('[AI] –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ YandexGPT...');
//
//   const systemPrompt = `
//     –¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π SMM-–º–µ–Ω–µ–¥–∂–µ—Ä –∏ –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä, –º–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ–≤–ª–µ–∫–∞—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤.
//     –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–≤–∞ –¥–µ–π—Å—Ç–≤–∏—è:
//
//     1.  –†–µ—Ä–∞–π—Ç —Ç–µ–∫—Å—Ç–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º): –°–¥–µ–ª–∞–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ—Ä–∞–π—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï.
//         –¢–≤–æ—è —Ü–µ–ª—å ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Å–∫–∞–∑–∞—Ç—å, –∞ —Å–¥–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –ª–µ–≥–∫–æ —á–∏—Ç–∞–µ–º—ã–º –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π.
//         –î–ª—è —ç—Ç–æ–≥–æ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–ª–µ–¥—É–π —ç—Ç–∏–º –ø—Ä–∞–≤–∏–ª–∞–º:
//         -   **–≠–º–æ–¥–∑–∏:** –£–º–µ—Å—Ç–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ –∏–ª–∏ –∫–æ–Ω—Ü–µ –∞–±–∑–∞—Ü–µ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–º–æ—Ü–∏–π –∏ –∞–∫—Ü–µ–Ω—Ç–æ–≤. üí° ‚úÖ üöÄ
//         -   **–ê–±–∑–∞—Ü—ã:** –†–∞–∑–±–µ–π —Å–ø–ª–æ—à–Ω–æ–π —Ç–µ–∫—Å—Ç –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞–±–∑–∞—Ü—ã (2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è).
//         -   **–û—Ç—Å—Ç—É–ø—ã:** –ú–µ–∂–¥—É –∞–±–∑–∞—Ü–∞–º–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ (–≤–∏–∑—É–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã), —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç "–¥—ã—à–∞–ª".
//         -   **–°–ø–∏—Å–∫–∏:** –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è, –æ—Ñ–æ—Ä–º–ª—è–π –∏—Ö –≤ –≤–∏–¥–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –ø–æ–º–æ—â—å—é ‚Ä¢ –∏–ª–∏ -).
//
//     2.  –ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º): –°–æ–∑–¥–∞–π —è—Ä–∫–∏–π, –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–∞ –ê–ù–ì–õ–ò–ô–°–ö–û–ú –Ø–ó–´–ö–ï –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, Midjourney –∏–ª–∏ DALL-E). –ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω –≤–∏–∑—É–∞–ª—å–Ω–æ –æ—Ç—Ä–∞–∂–∞—Ç—å –∫–ª—é—á–µ–≤—É—é –∏–¥–µ—é –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞. –û–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Å—Ç–∏–ª–µ "cinematic, hyper-detailed, epic lighting".
//
//     –í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, –∏ –Ω–∏–∫–∞–∫ –∏–Ω–∞—á–µ. –í–æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:
//     {
//       "rewrittenText": "–¢–≤–æ–π –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ—Ä–∞–π—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –∑–¥–µ—Å—å...",
//       "imagePrompt": "Your detailed English image prompt here..."
//     }
//   `;
//
//   const requestBody = {
//     modelUri: `gpt://${yandexFolderId}/yandexgpt-lite/latest`,
//     completionOptions: {
//       stream: false,
//       temperature: 0.6,
//       maxTokens: "2000"
//     },
//     messages: [
//       { role: "system", text: systemPrompt },
//       { role: "user", text: `–í–æ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:\n\n${originalText}` }
//     ]
//   };
//
//   try {
//     const response = await fetch(yandexApiUrl, {
//       method: 'POST',
//       headers: {
//         'Content-Type': 'application/json',
//         'Authorization': `Api-Key ${yandexApiKey}`
//       },
//       body: JSON.stringify(requestBody)
//     });
//
//     if (!response.ok) {
//       const errorText = await response.text();
//       throw new Error(`YandexGPT API error (${response.status}): ${errorText}`);
//     }
//
//     const data = await response.json();
//     let resultJson = data.result?.alternatives?.[0]?.message?.text;
//
//     if (!resultJson) {
//       throw new Error('AI returned an empty or invalid response structure.');
//     }
//
//     console.log('[AI] –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω. –ü–æ–ª—É—á–µ–Ω "—Å—ã—Ä–æ–π" –æ—Ç–≤–µ—Ç:', resultJson);
//
//     // --- –û—á–∏—Å—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Markdown ---
//     const firstBrace = resultJson.indexOf('{');
//     const lastBrace = resultJson.lastIndexOf('}');
//
//     if (firstBrace !== -1 && lastBrace > firstBrace) {
//       resultJson = resultJson.substring(firstBrace, lastBrace + 1);
//     }
//
//     // –ù–µ–π—Ä–æ—Å–µ—Ç—å –≤–µ—Ä–Ω—É–ª–∞ –Ω–∞–º —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, —Ç–µ–ø–µ—Ä—å –ø–∞—Ä—Å–∏–º –µ–µ –≤ –æ–±—ä–µ–∫—Ç
//     return JSON.parse(resultJson) as AiAnalysisResult;
//
//   } catch (error) {
//     console.error('[AI] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ YandexGPT API:', error);
//     throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –æ—Ç AI.');
//   }
// }
